@page "/gallery"
@using MyGarage.Services
@using Garage

@inject ITheGarageClient TheGarageClient

<PageTitle>Vehicle Gallery</PageTitle>

<div class="container">
    <div class="row tile">
        <div class="col-md-1">
            <img src="/images/gallery-svgrepo-com.svg" alt="Photo Gallery" class="img-fluid" width="64px">
        </div>
        <div class="col-md-6">
            <h1>Photo Gallery</h1>
        </div>
    </div>
</div>


@if (_photos == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <div class="row">
            @foreach (var photo in _photos)
            {
                <div class="col-md-3">
                    <img src="@photo.Uri?@TheGarage.SasToken" alt="@photo.Description" class="img-thumbnail" />
                    <div>@photo.Title (@photo.VehicleSummary)</div>
                </div>
            }
        </div>
    </div>
}

@code {
    private class PhotoDisplay(Vehicle vehicle, Photo photo)
    {
        public string Title { get; } = photo.Title;
        public string Description { get; } = photo.Description;
        public string VehicleSummary { get; } = vehicle.Year + " " + vehicle.Make + " " + vehicle.Model;
        public string Uri { get; } = photo.Uri;
    }

    private TheGarage? TheGarage { get; set; }

    private IEnumerable<PhotoDisplay> _photos = new List<PhotoDisplay>();

    protected override async Task OnInitializedAsync() 
    {
        TheGarage = await TheGarageClient.GetVehiclesAsync();

        if(TheGarage.Vehicles != null)
        {
            _photos = from vehicle in TheGarage.Vehicles
                from photo in vehicle.Photos ?? new List<Photo>()
                    select new PhotoDisplay(vehicle, photo);
        }
        
    }
}
