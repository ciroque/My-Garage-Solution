@using Garage
@* Based on the Component from https://blazor-university.com/modals/creating-a-delete-confirmation-dialog-in-blazor/ *@

@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                            @onclick="() => OnConfirmationChoiceMade(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Message
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"
                            @onclick="() => OnConfirmationChoiceMade(false)">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-danger"
                            @onclick="() => OnConfirmationChoiceMade(true)">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    public class ConfirmationState(bool choice, Vehicle vehicle, Guid maintenanceId)
    {
        public ConfirmationState() : this(false, Vehicle.Empty, Guid.Empty)
        {
        }

        public bool Confirmed { get; set; } = choice;
        public Vehicle Vehicle { get; set; } = vehicle;
        public Guid MaintenanceId { get; set; } = maintenanceId;
    }

    private ConfirmationState _confirmationState = new();

    protected bool ShowConfirmation { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public string Title { get; set; } = "Delete?";

    [Parameter]
    public string Message { get; set; } = "Are you sure you want to delete this item?";

    [Parameter]
    public EventCallback<ConfirmationState> ConfirmationChoiceMade { get; set; }

    public void Show(string message, Vehicle vehicle)
    {
        Show(message, vehicle, Guid.Empty);
    }

    public void Show(string message, Vehicle vehicle, Guid maintenanceId)
    {
        ShowConfirmation = true;

        Message = message;
        
        _confirmationState.Vehicle = vehicle;
        _confirmationState.MaintenanceId = maintenanceId;
    }

    protected async Task OnConfirmationChoiceMade(bool choice)
    {
        ShowConfirmation = false;
        _confirmationState.Confirmed = choice;

        await ConfirmationChoiceMade.InvokeAsync(_confirmationState);
    }
}
