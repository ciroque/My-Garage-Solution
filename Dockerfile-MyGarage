# docker build -t my-garage:disco -f .\Dockerfile-MyGarage . --progress plain --no-cache
# docker run --env-file debugging.env  -dit --rm -p 80:80 --name my_garage my-garage:disco

ARG THE_GARAGE_HOST

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

ENV THE_GARAGE_HOST=${THE_GARAGE_HOST}

WORKDIR /src

COPY ./Garage ./Garage
COPY ./MyGarage ./MyGarage

RUN ls -la

WORKDIR /src/MyGarage

RUN ls -la

RUN dotnet restore MyGarage.csproj
RUN dotnet build MyGarage.csproj -c Release -o /app/build
RUN dotnet publish MyGarage.csproj -c Release -o /app/publish

### Second Stage

FROM nginx:alpine AS final

ENV THE_GARAGE_HOST=${THE_GARAGE_HOST}

COPY --from=build /src/MyGarage/nginx.conf /etc/nginx/nginx.conf

RUN rm -rf /usr/share/nginx/html/*

COPY --from=build /app/publish/wwwroot /usr/share/nginx/html

RUN ln -snf /usr/share/nginx/html /etc/nginx/html \
	&& ln -snf /usr/share/nginx/html /var/www

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
